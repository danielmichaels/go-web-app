// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: examples.sql

package store

import (
	"context"
)

const exampleSelectAll = `-- name: ExampleSelectAll :many
SELECT id, created_at, updated_at, text FROM examples
`

func (q *Queries) ExampleSelectAll(ctx context.Context) ([]Examples, error) {
	rows, err := q.db.Query(ctx, exampleSelectAll)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Examples{}
	for rows.Next() {
		var i Examples
		if err := rows.Scan(
			&i.ID,
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.Text,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const insertExample = `-- name: InsertExample :exec
INSERT INTO examples (text)
VALUES ($1)
`

func (q *Queries) InsertExample(ctx context.Context, text string) error {
	_, err := q.db.Exec(ctx, insertExample, text)
	return err
}

const updateExample = `-- name: UpdateExample :exec
UPDATE examples
SET text = $1
WHERE id = $2
`

type UpdateExampleParams struct {
	Text string `json:"text"`
	ID   int32  `json:"id"`
}

func (q *Queries) UpdateExample(ctx context.Context, arg UpdateExampleParams) error {
	_, err := q.db.Exec(ctx, updateExample, arg.Text, arg.ID)
	return err
}
